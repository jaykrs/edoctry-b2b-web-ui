const htmlContent = editorRef.current.getHtml();
            const cssContent = editorRef.current.getCss();
            let content = editorRef.current.getHtml();
            content = content.replace(/<!DOCTYPE[^>]*>/i, '');
            content = content.replace(/<html[^>]>([\s\S]?)<\/html>/, '$1');
            content = content.replace(/<head[^>]>[\s\S]?<\/head>/, '')
            content = content.replace(/<body[^>]>([\s\S]?)<\/body>/, '$1');
            content = content.replace(/\s+/g, ' ').trim();



            
            {/* form div */}
            <div className="bg-[#DDE6FA] p-10 rounded-3xl mt-6 grid grid-cols-1 md:grid-cols-2 gap-4 w-full">
              {/* Name */}
              <div>
                <h3 className="text-gray-700 text-base font-bold pb-2">Name</h3>
                <input
                  type="text"
                  placeholder="Name"
                  className={`w-full border-2 ${!isEditable ? 'bg-gray-100 rounded-xl p-2 mb-3' : 'bg-white rounded-xl p-2 mb-3'}`}
                  value={formData.name}
                  disabled={!isEditable}
                  onChange={(e) => setFormData({ ...formData, name: e.target.value })}
                />
              </div>

              {/* Email */}
              <div>
                <h3 className="text-gray-700 text-base font-bold pb-2">Email</h3>
                <input
                  type="email"
                  placeholder="Email"
                  className={`w-full border-2 ${!isEditable ? 'bg-gray-100 rounded-xl p-2 mb-3' : 'bg-white rounded-xl p-2 mb-3'}`}
                  value={formData.email}
                  disabled={!isEditable}
                  onChange={(e) => setFormData({ ...formData, email: e.target.value })}
                />
              </div>



              {/* Phone */}
              <div>
                <h3 className="text-gray-700 text-base font-bold pb-2">Phone</h3>
                <input
                  type="tel"
                  placeholder="Phone"
                  className={`w-full border-2 ${!isEditable ? 'bg-gray-100 rounded-xl p-2 mb-3' : 'bg-white rounded-xl p-2 mb-3'}`}
                  value={formData.phone}
                  disabled={!isEditable}

                  onChange={(e) => setFormData({ ...formData, phone: e.target.value })}
                />
              </div>

              {/* Skills */}
              <div>
                <h3 className="text-gray-700 text-base font-bold pb-2">Skills</h3>
                <input
                  type="text"
                  placeholder="Skills (comma separated)"
                  className={`w-full border-2 ${!isEditable ? 'bg-gray-100 rounded-xl p-2 mb-3' : 'bg-white rounded-xl p-2 mb-3'}`}
                  value={formData.skills}
                  disabled={!isEditable}

                  onChange={(e) => setFormData({ ...formData, skills: e.target.value })}
                />
              </div>

              {/* Qualification */}
              <div>
                <h3 className="text-gray-700 text-base font-bold pb-2">Qualification</h3>
                <input
                  type="text"
                  placeholder="Qualification"
                  className={`w-full border-2 ${!isEditable ? 'bg-gray-100 rounded-xl p-2 mb-3' : 'bg-white rounded-xl p-2 mb-3'}`}
                  value={formData.qualification}
                  disabled={!isEditable}

                />
              </div>

              {/* Active */}
              <div className="flex items-center mt-8">
                <input
                  type="checkbox"
                  className="mr-2"
                  checked={formData.active}
                  disabled={!isEditable}

                  onChange={(e) => setFormData({ ...formData, active: e.target.checked })}
                />
                <label className="text-gray-700">Active</label>
              </div>

              {/* Remarks */}
              <div>
                <h3 className="text-gray-700 text-base font-bold pb-2">Remarks</h3>
                <input
                  type="text"
                  placeholder="Remarks"
                  className={`w-full border-2 ${!isEditable ? 'bg-gray-100 rounded-xl p-2 mb-3' : 'bg-white rounded-xl p-2 mb-3'}`}
                  value={formData.remarks}
                  disabled={!isEditable}

                  onChange={(e) => setFormData({ ...formData, remarks: e.target.value })}
                />
              </div>

              {/* Address */}
              <div>
                <h3 className="text-gray-700 text-base font-bold pb-2">Address</h3>
                <textarea
                  placeholder="Address"
                  className={`w-full border-2 ${!isEditable ? 'bg-gray-100 rounded-xl p-2 mb-3' : 'bg-white rounded-xl p-2 mb-3'}`}
                  value={formData.address}
                  disabled={!isEditable}
                  onChange={(e) => setFormData({ ...formData, address: e.target.value })}
                />
              </div>

              {/* Social Media */}
              <div>
                <h3 className="text-gray-700 text-base font-bold pb-2">Social Media</h3>
                <input
                  type="text"
                  placeholder="Social media links"
                  className={`w-full border-2 ${!isEditable ? 'bg-gray-100 rounded-xl p-2 mb-3' : 'bg-white rounded-xl p-2 mb-3'}`}
                  value={formData.smedia}
                  disabled={!isEditable}
                  onChange={(e) => setFormData({ ...formData, smedia: e.target.value })}
                />
              </div>

              {/* Payment Summary */}
              <div>
                <h3 className="text-gray-700 text-base font-bold pb-2">Payment Summary</h3>
                <textarea
                  placeholder="Payment summary"
                  className={`w-full border-2 ${!isEditable ? 'bg-gray-100 rounded-xl p-2 mb-3' : 'bg-white rounded-xl p-2 mb-3'}`}
                  value={formData.paymentSummery}
                  disabled={!isEditable}
                  onChange={(e) => setFormData({ ...formData, paymentSummery: e.target.value })}
                />
              </div>

              {/* Courses */}
              <div>
                <h3 className="text-gray-700 text-base font-bold pb-2">Courses</h3>
                <input
                  type="text"
                  placeholder="Courses"
                  className={`w-full border-2 ${!isEditable ? 'bg-gray-100 rounded-xl p-2 mb-3' : 'bg-white rounded-xl p-2 mb-3'}`}
                  value={formData.courses}
                  disabled={!isEditable}
                  onChange={(e) => setFormData({ ...formData, courses: e.target.value })}
                />
              </div>

              {/* Subscribe Domain */}
              <div>
                <h3 className="text-gray-700 text-base font-bold pb-2">Subscribe Domain</h3>
                <input
                  type="text"
                  placeholder="Subscribed Domain"
                  className={`w-full border-2 ${!isEditable ? 'bg-gray-100 rounded-xl p-2 mb-3' : 'bg-white rounded-xl p-2 mb-3'}`}
                  value={formData.subscribeDomain}
                  disabled={!isEditable}
                  onChange={(e) => setFormData({ ...formData, subscribeDomain: e.target.value })}
                />
              </div>

              {/* DOB */}
              <div>
                <h3 className="text-gray-700 text-base font-bold pb-2">Date of Birth</h3>
                <input
                  type="date"
                  className={`w-full border-2 ${!isEditable ? 'bg-gray-100 rounded-xl p-2 mb-3' : 'bg-white rounded-xl p-2 mb-3'}`}
                  value={formData.dob}
                  disabled={!isEditable}
                  onChange={(e) => setFormData({ ...formData, dob: e.target.value })}
                />
              </div>

              {/* Biography */}
              <div>
                <h3 className="text-gray-700 text-base font-bold pb-2">Biography</h3>
                <textarea
                  placeholder="Biography"
                  className={`w-full border-2 ${!isEditable ? 'bg-gray-100 rounded-xl p-2 mb-3' : 'bg-white rounded-xl p-2 mb-3'}`}
                  value={formData.biography}
                  disabled={!isEditable}
                  onChange={(e) => setFormData({ ...formData, biography: e.target.value })}
                />
              </div>
            </div>




            {/* form end */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 bg-[#DDE6FA] p-4 rounded-3xl mt-6">


              <button
                onClick={() => {
                  setShowModal(false);
                  setEditingStudentId(null);
                  setIsEditable(false);
                }}
                className="w-full px-4 py-2 bg-gray-400 hover:bg-red-700 hover:text-white rounded-2xl text-center"
              >
                Cancel
              </button>
              {editingStudentId !== null && !isEditable ? (
                <button
                  onClick={() => setIsEditable(true)}
                  className="w-full px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 rounded-2xl text-center"
                >
                  Edit
                </button>
              ) : (
                <button
                  className="w-full px-4 py-2 bg-green-600 text-white hover:bg-green-700 rounded-2xl text-center"
                >
                  Save
                </button>

              )}
            </div>